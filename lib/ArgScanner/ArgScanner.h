// Generated by Flexc++ V2.11.00 on Wed, 05 Apr 2023 09:55:22 +0200

#ifndef ArgScanner_H_INCLUDED_
#define ArgScanner_H_INCLUDED_

#include "ArgScannerbase.h"

class ArgScanner : public ArgScannerBase
{
  public:
    explicit ArgScanner(
      std::istream &in = std::cin, std::ostream &out = std::cout,
      bool keepCwd = true
    );

    ArgScanner(
      std::string const &infile, std::string const &outfile, bool keepCwd = true
    );

    int lex();

  private:
    int lex_();
    int executeAction_(size_t ruleNr);

    void print();

    void preCode();
    void postCode(PostEnum_ type);
};

inline ArgScanner::ArgScanner(std::istream &in, std::ostream &out, bool keepCwd)
  : ArgScannerBase(in, out, keepCwd)
{}

inline ArgScanner::ArgScanner(
  std::string const &infile, std::string const &outfile, bool keepCwd
) : ArgScannerBase(infile, outfile, keepCwd)
{}

inline int ArgScanner::lex()
{
  return lex_();
}

inline void ArgScanner::preCode()
{}

inline void ArgScanner::postCode([[maybe_unused]] PostEnum_ type)
{}

inline void ArgScanner::print()
{
  print_();
}

#endif // ArgScanner_H_INCLUDED_

