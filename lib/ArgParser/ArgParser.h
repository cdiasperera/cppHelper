// Generated by Bisonc++ V6.04.03 on Wed, 05 Apr 2023 09:55:22 +0200

#ifndef ArgParser_h_included
#define ArgParser_h_included

// $insert baseclass
#include "ArgParserbase.h"
// $insert scanner.h
#include "../ArgScanner/ArgScanner.h"



class ArgParser: public ArgParserBase
{
    // $insert scannerobject
    ArgScanner d_scanner;
        
    public:
        ArgParser() = default;
        ArgParser(int argc, char *argv[]);                // 1.cc
        int parse();

    private:
        void error();                   // called on (syntax) errors
        int lex();                      // returns the next token from the
                                        // lexical scanner. 
        void print();                   // use, e.g., d_token, d_loc
        void exceptionHandler(std::exception const &exc);

    // support functions for parse():
        void executeAction_(int ruleNr);
        void errorRecovery_();
        void nextCycle_();
        void nextToken_();
        void print_();
};


#endif
